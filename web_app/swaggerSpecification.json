{
	"openapi": "3.0.0",
	"info": {
		"title": "API",
		"version": "1.0.0"
	},
	"paths": {
		"/api/execution/{id}": {
			"get": {
				"summary": "Get an execution by ID",
				"description": "Retrieves an execution record by its unique identifier.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the execution record."
					}
				],
				"responses": {
					"200": {
						"description": "The requested execution record.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Execution"
								},
								"example": {
									"id": "650c8ccdcf633bdd999a06db",
									"ownerId": "0c0b366987bb7eed7d17d62a",
									"groupId": 73696,
									"root": true,
									"url": "https://gleaming-cinnamon.info",
									"crawlTimeStart": 3703845916,
									"crawlTimeEnd": 3457210445,
									"status": "running",
									"sitesCrawled": 63651,
									"links": [
										"https://pesky-mandate.biz",
										"https://blissful-means.com",
										"https://incompatible-clarification.org",
										"http://worried-yellowjacket.name",
										"https://paltry-extreme.info",
										"https://remorseful-north.org"
									],
									"title": "beatae aspernatur architecto"
								}
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"404": {
						"description": "Execution not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Execution not found"
								}
							}
						}
					},
					"500": {
						"description": "Failed to get execution",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to get execution"
								}
							}
						}
					}
				},
				"tags": ["Executions"]
			},
			"put": {
				"summary": "Update an execution by ID",
				"description": "Updates an execution record by its unique identifier.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the execution record."
					}
				],
				"requestBody": {
					"description": "The updated execution record.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"ownerId": {
										"type": "string"
									},
									"groupId": {
										"type": "integer",
										"minimum": 0
									},
									"root": {
										"type": "boolean"
									},
									"url": {
										"type": "string"
									},
									"crawlTimeStart": {
										"type": "integer"
									},
									"crawlTimeEnd": {
										"type": "integer"
									},
									"status": {
										"type": "string",
										"enum": ["success", "failed", "running", "queued", "notValid"]
									},
									"sitesCrawled": {
										"type": "integer",
										"minimum": 0
									},
									"links": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"title": {
										"type": "string"
									}
								},
								"required": [
									"ownerId",
									"groupId",
									"root",
									"url",
									"crawlTimeStart",
									"crawlTimeEnd",
									"status",
									"sitesCrawled",
									"links",
									"title"
								]
							},
							"example": {
								"ownerId": "0c0b366987bb7eed7d17d62a",
								"groupId": 73696,
								"root": true,
								"url": "https://gleaming-cinnamon.info",
								"crawlTimeStart": 10,
								"crawlTimeEnd": 11111,
								"status": "running",
								"sitesCrawled": 63651,
								"links": [
									"https://pesky-mandate.biz",
									"https://blissful-means.com",
									"https://incompatible-clarification.org",
									"http://worried-yellowjacket.name",
									"https://paltry-extreme.info",
									"https://remorseful-north.org"
								],
								"title": "beatae aspernatur architecto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The updated execution record.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Execution"
								},
								"example": {
									"id": "650c8ccdcf633bdd999a06db",
									"ownerId": "0c0b366987bb7eed7d17d62a",
									"groupId": 73696,
									"root": true,
									"url": "https://gleaming-cinnamon.info",
									"crawlTimeStart": 10,
									"crawlTimeEnd": 11111,
									"status": "running",
									"sitesCrawled": 63651,
									"links": [
										"https://pesky-mandate.biz",
										"https://blissful-means.com",
										"https://incompatible-clarification.org",
										"http://worried-yellowjacket.name",
										"https://paltry-extreme.info",
										"https://remorseful-north.org"
									],
									"title": "beatae aspernatur architecto"
								}
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID, Invalid JSON or Invalid execution without ID ",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"404": {
						"description": "Execution not found or no changes were made",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Execution not found or no changes were made"
								}
							}
						}
					},
					"500": {
						"description": "Failed to update execution",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to update execution"
								}
							}
						}
					}
				},
				"tags": ["Executions"]
			},
			"delete": {
				"summary": "Delete an execution by ID",
				"description": "Deletes an execution record by its unique identifier.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the execution record."
					}
				],
				"responses": {
					"200": {
						"description": "Deletion success status.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"success": true
								}
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"404": {
						"description": "Execution not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Execution not found"
								}
							}
						}
					},
					"500": {
						"description": "Failed to delete execution",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to delete execution"
								}
							}
						}
					}
				},
				"tags": ["Executions"]
			}
		},
		"/api/execution": {
			"post": {
				"summary": "Create a new execution record",
				"description": "Creates a new execution record and returns the ID of the created record.",
				"requestBody": {
					"description": "The execution record to create.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"ownerId": {
										"type": "string"
									},
									"groupId": {
										"type": "integer",
										"minimum": 0
									},
									"root": {
										"type": "boolean"
									},
									"url": {
										"type": "string"
									},
									"crawlTimeStart": {
										"type": "integer"
									},
									"crawlTimeEnd": {
										"type": "integer"
									},
									"status": {
										"type": "string",
										"enum": ["success", "failed", "running", "queued", "notValid"]
									},
									"sitesCrawled": {
										"type": "integer",
										"minimum": 0
									},
									"links": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"title": {
										"type": "string"
									}
								},
								"required": [
									"ownerId",
									"groupId",
									"root",
									"url",
									"crawlTimeStart",
									"crawlTimeEnd",
									"status",
									"sitesCrawled",
									"links",
									"title"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The ID of the created execution record.",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								},
								"example": "0c0b366987bb7eed7d17d62a"
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID, Invalid JSON or Invalid execution without ID ",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid execution without ID"
								}
							}
						}
					},
					"500": {
						"description": "Failed to execution",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to create execution"
								}
							}
						}
					}
				},
				"tags": ["Executions"]
			}
		},
		"/api/executions/{id}": {
			"delete": {
				"summary": "Delete executions by Owner ID",
				"description": "Deletes all executions associated with a specific Website Record by its unique identifier.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the Website Record."
					}
				],
				"responses": {
					"200": {
						"description": "Deletion success status.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"success": true
								}
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"404": {
						"description": "Execution not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Execution not found"
								}
							}
						}
					},
					"500": {
						"description": "Failed to delete executions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to delete executions"
								}
							}
						}
					}
				},
				"tags": ["Executions"]
			}
		},
		"/api/executions": {
			"get": {
				"summary": "Get a list of root executions",
				"description": "Returns a list of root execution records.",
				"responses": {
					"200": {
						"description": "A list of executions",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Execution"
									}
								},
								"example": [
									{
										"id": "650c8ccdcf633bdd999a06db",
										"ownerId": "0c0b366987bb7eed7d17d62a",
										"groupId": 73696,
										"root": true,
										"url": "https://gleaming-cinnamon.info",
										"crawlTimeStart": 3703845916,
										"crawlTimeEnd": 3457210445,
										"status": "running",
										"sitesCrawled": 63651,
										"links": [
											"https://pesky-mandate.biz",
											"https://blissful-means.com",
											"https://incompatible-clarification.org",
											"http://worried-yellowjacket.name",
											"https://paltry-extreme.info",
											"https://remorseful-north.org"
										],
										"title": "beatae aspernatur architecto"
									},
									{
										"id": "650c8ccdcf633bdd999a06df",
										"ownerId": "d8da55dff0afa59adb012aa6",
										"groupId": 28339,
										"root": true,
										"url": "http://immense-skullduggery.info",
										"crawlTimeStart": 2228907463,
										"crawlTimeEnd": 1700541710,
										"status": "failed",
										"sitesCrawled": 16924,
										"links": [
											"https://charming-arithmetic.org",
											"https://able-lycra.com",
											"https://mellow-gasket.net",
											"https://nautical-candy.org",
											"https://appropriate-legislator.name",
											"https://tubby-someone.biz"
										],
										"title": "rem officiis accusantium"
									}
								]
							}
						}
					},
					"500": {
						"description": "Failed to get all website records",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to get all website records"
								}
							}
						}
					}
				},
				"tags": ["Executions"]
			}
		},
		"/api/executions?ownerId={ownerId}&groupId={groupId}": {
			"get": {
				"summary": "Get a list of executions by group ID and owner ID",
				"description": "Returns a list of executions filtered by group ID and owner ID.",
				"parameters": [
					{
						"in": "query",
						"name": "ownerId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the Website Record."
					},
					{
						"in": "query",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "integer",
							"minimum": 0
						},
						"description": "The group ID of the execution."
					}
				],
				"responses": {
					"200": {
						"description": "A list of executions",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Execution"
									}
								},
								"example": [
									{
										"id": "650c8ccdcf633bdd999a073a",
										"ownerId": "6508f6ee4b26a1bdf03bfd17",
										"groupId": 1,
										"root": false,
										"url": "http://impeccable-job.org",
										"crawlTimeStart": 4230765526,
										"crawlTimeEnd": 557974387,
										"status": "running",
										"sitesCrawled": 36399,
										"links": [],
										"title": "illo atque molestias"
									},
									{
										"id": "650c8ccdcf633bdd999a073b",
										"ownerId": "6508f6ee4b26a1bdf03bfd17",
										"groupId": 1,
										"root": true,
										"url": "https://rusty-vitamin.info",
										"crawlTimeStart": 1624294880,
										"crawlTimeEnd": 4194161358,
										"status": "running",
										"sitesCrawled": 81411,
										"links": [
											"http://polished-corn.com",
											"http://hopeful-nondisclosure.name",
											"http://serious-tilt.com",
											"http://elaborate-guava.biz",
											"http://agreeable-earth.info",
											"https://keen-disclaimer.net",
											"http://intelligent-shock.info"
										],
										"title": "necessitatibus numquam adipisci"
									}
								]
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID or Invalid group ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"500": {
						"description": "Failed to get all executions by owner ID and group ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to get all executions by owner ID and group ID"
								}
							}
						}
					}
				},
				"tags": ["Executions"]
			}
		},
		"/api/record/{id}": {
			"get": {
				"summary": "Get a website record by ID",
				"description": "Retrieves a website record by its unique identifier.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the website record."
					}
				],
				"responses": {
					"200": {
						"description": "The requested website record.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WebsiteRecord"
								},
								"example": {
									"id": "6508f8444cd2938211def95e",
									"url": "https://yawning-yam.com",
									"periodicity": {
										"minutes": 19,
										"hours": 0,
										"days": 7
									},
									"regexp": "Solutions",
									"label": "westernise East Avon",
									"active": false,
									"tags": ["repurpose", "bootie", "indigo"],
									"latestGroupId": 345
								}
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"404": {
						"description": "Website record not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Website record not found"
								}
							}
						}
					},
					"500": {
						"description": "Failed to get website record",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to get website record"
								}
							}
						}
					}
				},
				"tags": ["Website Records"]
			},
			"put": {
				"summary": "Update a website record by ID",
				"description": "Updates a website record by its unique identifier.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the website record."
					}
				],
				"requestBody": {
					"description": "The updated website record.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"url": {
										"type": "string"
									},
									"periodicity": {
										"$ref": "#/components/schemas/Periodicity"
									},
									"regexp": {
										"type": "string"
									},
									"label": {
										"type": "string"
									},
									"active": {
										"type": "boolean"
									},
									"tags": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"latestGroupId": {
										"type": "integer",
										"minimum": -1
									}
								},
								"required": [
									"url",
									"periodicity",
									"regexp",
									"label",
									"active",
									"tags",
									"latestGroupId"
								]
							},
							"example": {
								"url": "https://yawning-yam.com",
								"periodicity": {
									"minutes": 19,
									"hours": 0,
									"days": 7
								},
								"regexp": "Solutions",
								"label": "westernise East Avon",
								"active": true,
								"tags": ["repurpose", "bootie", "indigo"],
								"latestGroupId": 346
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The updated website record.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WebsiteRecord"
								},
								"example": {
									"id": "6508f8444cd2938211def95e",
									"url": "https://yawning-yam.com",
									"periodicity": {
										"minutes": 19,
										"hours": 0,
										"days": 7
									},
									"regexp": "Solutions",
									"label": "westernise East Avon",
									"active": true,
									"tags": ["repurpose", "bootie", "indigo"],
									"latestGroupId": 346
								}
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID, Invalid JSON or Invalid website record without ID ",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"404": {
						"description": "Website record not found or no changes were made",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Website record not found or no changes were made"
								}
							}
						}
					},
					"500": {
						"description": "Failed to update website record",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to update website record"
								}
							}
						}
					}
				},
				"tags": ["Website Records"]
			},
			"delete": {
				"summary": "Delete a website record by ID",
				"description": "Deletes a website record by its unique identifier.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the website record."
					}
				],
				"responses": {
					"200": {
						"description": "Deletion success status.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"success": true
								}
							}
						}
					},
					"400": {
						"description": "Invalid Mongo ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid Mongo ID"
								}
							}
						}
					},
					"404": {
						"description": "Website record not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Website record not found"
								}
							}
						}
					},
					"500": {
						"description": "Failed to delete website record",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to delete website record"
								}
							}
						}
					}
				},
				"tags": ["Website Records"]
			}
		},
		"/api/record": {
			"post": {
				"summary": "Create a new website record",
				"description": "Creates a new website record and returns the ID of the created record.",
				"requestBody": {
					"description": "The website record to create.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"url": {
										"type": "string"
									},
									"periodicity": {
										"$ref": "#/components/schemas/Periodicity"
									},
									"regexp": {
										"type": "string"
									},
									"label": {
										"type": "string"
									},
									"active": {
										"type": "boolean"
									},
									"tags": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"latestGroupId": {
										"type": "integer",
										"minimum": -1
									}
								},
								"required": [
									"url",
									"periodicity",
									"regexp",
									"label",
									"active",
									"tags",
									"latestGroupId"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The ID of the created website record.",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								},
								"example": "6508f8444cd2938211def95e"
							}
						}
					},
					"400": {
						"description": "Invalid JSON or Invalid website record without ID ",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Invalid website record without ID"
								}
							}
						}
					},
					"500": {
						"description": "Failed to create website record",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to create website record"
								}
							}
						}
					}
				},
				"tags": ["Website Records"]
			}
		},
		"/api/records": {
			"get": {
				"summary": "Get a list of website records",
				"description": "Returns a list of website records from the database.",
				"responses": {
					"200": {
						"description": "A list of website records",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/WebsiteRecord"
									}
								},
								"example": [
									{
										"id": "6508f8444cd2938211def95e",
										"url": "https://yawning-yam.com",
										"periodicity": {
											"minutes": 19,
											"hours": 0,
											"days": 7
										},
										"regexp": "Solutions",
										"label": "westernise East Avon",
										"active": false,
										"tags": ["repurpose", "bootie", "indigo"],
										"latestGroupId": 346
									},
									{
										"id": "6508f8444cd2938211def962",
										"url": "https://elastic-glee.biz",
										"periodicity": {
											"minutes": 57,
											"hours": 13,
											"days": 0
										},
										"regexp": "orchid",
										"label": "SMTP Producer",
										"active": true,
										"tags": ["corkscrew", "clinking", "bypassing"],
										"latestGroupId": 451
									}
								]
							}
						}
					},
					"500": {
						"description": "Failed to get all website records",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"example": {
									"message": "Failed to get all website records"
								}
							}
						}
					}
				},
				"tags": ["Website Records"]
			}
		},
		"http://localhost:5000/api/crawler/start/{id}": {
			"get": {
				"summary": "Start crawler for given website record ID",
				"description": "Start crawler for given website record ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the website record."
					}
				],
				"responses": {
					"200": {
						"description": "Crawling started succesfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": ["message"]
								},
								"example": {
									"message": "Crawling started succesfully"
								}
							}
						}
					},
					"404": {
						"description": "Record with id: ${id} not found!",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": ["message"]
								},
								"example": {
									"message": "Record with id: ${id} not found!"
								}
							}
						}
					}
				},
				"tags": ["Crawler"]
			}
		},
		"http://localhost:5000/api/crawler/stop/{id}": {
			"get": {
				"summary": "Stop crawler for given website record ID",
				"description": "Stop crawler for given website record ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the website record."
					}
				],
				"responses": {
					"200": {
						"description": "Crawling was succesfully aborted",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": ["message"]
								},
								"example": {
									"message": "Crawling was succesfully aborted"
								}
							}
						}
					},
					"404": {
						"description": "Record with id: ${id} not found!",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": ["message"]
								},
								"example": {
									"message": "Record with id: ${id} not found!"
								}
							}
						}
					}
				},
				"tags": ["Crawler"]
			}
		}
	},
	"components": {
		"schemas": {
			"Error": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": ["message"]
			},
			"Periodicity": {
				"type": "object",
				"properties": {
					"minutes": {
						"type": "integer",
						"minimum": 0
					},
					"hours": {
						"type": "integer",
						"minimum": 0
					},
					"days": {
						"type": "integer",
						"minimum": 0
					}
				},
				"required": ["minutes", "hours", "days"]
			},
			"WebsiteRecord": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"periodicity": {
						"$ref": "#/components/schemas/Periodicity"
					},
					"regexp": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"active": {
						"type": "boolean"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"latestGroupId": {
						"type": "integer",
						"minimum": -1
					}
				},
				"required": ["url", "periodicity", "regexp", "label", "active", "tags", "latestGroupId"]
			},
			"Execution": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"ownerId": {
						"type": "string"
					},
					"groupId": {
						"type": "integer",
						"minimum": 0
					},
					"root": {
						"type": "boolean"
					},
					"url": {
						"type": "string"
					},
					"crawlTimeStart": {
						"type": "integer"
					},
					"crawlTimeEnd": {
						"type": "integer"
					},
					"status": {
						"type": "string",
						"enum": ["success", "failed", "running", "queued", "notValid"]
					},
					"sitesCrawled": {
						"type": "integer",
						"minimum": 0
					},
					"links": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"ownerId",
					"groupId",
					"root",
					"url",
					"crawlTimeStart",
					"crawlTimeEnd",
					"status",
					"sitesCrawled",
					"links",
					"title"
				]
			}
		}
	}
}
